Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a 
space-separated sequence of one or more dictionary words. You may assume the dictionary does not contain duplicate words.

For example, given
s = "leetcode",
dict = ["leet", "code"].

Return true because "leetcode" can be segmented as "leet code".

UPDATE (2017/1/4):
The wordDict parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to
get the latest changes.

思路：这道题想简单了，如果遇到
"cars"
["car","ca","rs"] 应该输出true，但是我输出false，因为在遍历第一个后，后面的就不行了，但是如果从第二个开始，往后是可以的，这应该是backtrack
的题目，没有那么简单。
代码：
class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        for(int i = 0; i < wordDict.size(); i++){
            if(s.contains(wordDict.get(i))){
                int start = s.indexOf(wordDict.get(i));
                s = s.substring(0, start) + s.substring(start + wordDict.get(i).length(), s.length());
                i = 0;//再重头开始
            }
            if(s.length() <= 0){
                return true;
            }
            
        }
        if(s.length() > 0){
            return false;
        }
        return true;
        
        
    }
}
