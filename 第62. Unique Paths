A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner 
of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?

这道题是一道简单的动态规划题目，path[i][j]等于起点[0][0]到点[i][j]的路径数量。因为机器人智能向右或者向下，所以[][0]和[0][]都等于1.
对于path[i][j]，path[i][j] = path[i-1][j] + path[i][j-1]。因为到了它左边的节点+到了它上面的节点，之和就是到该节点的路径之和。
动态规划就是利用计算出来的结果，计算下一步结果，再利用，再计算，直到最终结果。
代码：
class Solution {
    public int uniquePaths(int m, int n) {
        int[][] path = new int[m][n];
        for(int i = 0; i < m; i++){//起点到[i][0]的路径数量，因为智能向右和向下，所以只有1条
            path[i][0] = 1;
        }
        for(int i = 0; i < n; i++){
            path[0][i] = 1;
        }
        for(int i = 1; i < m; i++){
            for(int j = 1; j < n; j++){
                path[i][j] = path[i-1][j] + path[i][j-1];
            }
        }
        
        return path[m-1][n-1];
    }
}
